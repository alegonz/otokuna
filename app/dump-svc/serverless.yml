service: dump-svc
app: otokuna
# org: is passed via command-line arg

frameworkVersion: "2"

plugins:
  - serverless-python-requirements
  - serverless-step-functions

custom:
  # TODO: Package requirements independently
  #  The S3 path generator should be lightweight
  pythonRequirements:
    pythonBin: ../../.venv/bin/python3
    dockerizePip: non-linux
    slim: true
  # every day at 12:00 UTC == 21:00 JST
  rate: cron(0 12 * * ? *)
  outputBucket: ${file(params.yml):outputBucket}

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1
  # TODO: This role should be limited only to the dump_property_data function
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.outputBucket}/*"

# TODO: package individually
package:
  exclude:
    - "**/*"
  include:
    - dump_property_data.py
    - generate_base_path.py

functions:
  generate_base_path:
    handler: generate_base_path.main
    memorySize: 128
  dump_property_data:
    handler: dump_property_data.main
    timeout: 900  # 15 min. max of AWS Lambda is 15 min
    memorySize: 256  # empirically observed value of 154 MB + leeway
    # TODO: consider limiting the number of attempts
    # maximumRetryAttempts: 1

stepFunctions:
  stateMachines:
    PropertyDumpMachine:
      events:
        - schedule:
            rate: ${self:custom.rate}
            input:
              output_bucket: ${self:custom.outputBucket}
              tokyo_wards: ${file(params.yml):tokyoWards}
      definition:
        Comment: "A state machine that dumps property data in parallel"
        StartAt: GenerateBasePath
        States:
          GenerateBasePath:
            Type: Task
            Resource:
              Fn::GetAtt: [generate_base_path, Arn]
            Next: DumpMap
          DumpMap:
            Type: Map
            ItemsPath: $.tokyo_wards
            Parameters:
              ward.$: $$.Map.Item.Value
              output_bucket.$: $.output_bucket
              base_path.$: $.base_path
            Iterator:
              StartAt: Dump
              States:
                Dump:
                  Type: Task
                  Resource:
                    Fn::GetAtt: [dump_property_data, Arn]
                  End: true
            End: true
